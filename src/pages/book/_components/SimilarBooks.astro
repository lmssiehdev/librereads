---
import BookCard from "../../../components/book-card.astro";
import { type GetSimilarBooksSchema } from "../../../utils/query/getSimilarBook";

interface Props {
  bookId: string;
  data: GetSimilarBooksSchema["getSimilarBooks"];
}

const { data, bookId } = Astro.props;

const similarBookData = data?.edges;
---

<div>
  <h3 class="text-lg mb-4">Readers also enjoyed</h3>
  <div class="grid grid-cols-4 gap-4">
    {
      similarBookData.map(({ node }) => {
        const { imageUrl, title, webUrl, legacyId: bookId } = node;
        const { name: authorName, legacyId: authorId } =
          node.primaryContributorEdge.node;
        const averageRating = node.work.stats.averageRating;
        return (
          <BookCard
            payload={{
              webUrl,
              bookId,
              authorId,
              authorName,
              averageRating,
              imageUrl,
              title,
            }}
          />
        );
      })
    }
  </div>
  <div>
    <a href={`/book/similar/${bookId}`} class="underline underline-offset-4">
      All similar books
    </a>
  </div>
</div>
