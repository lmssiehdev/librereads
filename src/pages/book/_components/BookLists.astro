---
import LinkWithArrow from "../../../components/ui/link-with-arrow.astro";
import { type GetBookListsOfBook } from "../../../utils/query/getBookListsOfBook";
import { changeGoodreadsImageSize } from "../../../utils/goodreads";
interface Props {
  bookId: string;
  data: GetBookListsOfBook["getBookListsOfBook"];
}

const { data, bookId } = Astro.props;

const listData = data?.edges;
---

<div class="mx-auto w-fit">
  <h3 class="text-xl mb-4">Lists with this book</h3>
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-5">
    {
      listData.map(({ node }) => {
        const { title, listBooksCount, userListVotesCount, id, books } = node;
        const url = `/list/show/${id}`;
        return (
          <div>
            <a href={url} class="flex gap-2  overflow-hidden rounded">
              {books.edges.map(({ node }) => {
                const { imageUrl, title } = node;
                return (
                  <div class="flex-1z h-[200px] max-w-[130px] w-full">
                    <img
                      src={changeGoodreadsImageSize(imageUrl, 200)}
                      alt={title}
                      class="w-full h-full object-cover"
                    />
                  </div>
                );
              })}
            </a>
            <div class="my-2">
              <a href={url} class="hover:underline underline-offset-4">
                {title}
              </a>
              <div class="text-sm text-slate-700">
                <span>{listBooksCount} books</span>
                {" â€¢ "}
                <span>{userListVotesCount} voters</span>
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
  <LinkWithArrow url={`/list/book/${bookId}`}>
    All lists with this book
  </LinkWithArrow>
</div>
