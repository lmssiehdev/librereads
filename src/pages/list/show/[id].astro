---
import Pagination from "../../../components/pagination.astro";
import MainLayout from "../../../layouts/Layout.astro";
import { sendAnalyticsEvent } from "../../../utils/analytics";
import {
  changeGoodreadsImageSize,
  extractIdFromUrl,
} from "../../../utils/goodreads";
import { setCache } from "../../../utils/misc";
import { fetchListDetails } from "../../../utils/scrapers/list";
const { id } = Astro.params;

setCache(Astro.response.headers);

const page = Number(Astro.url.searchParams.get("page")) || 1;
const result = await fetchListDetails(id as string, page);

if (!result?.rows) {
  sendAnalyticsEvent({
    event: "failed_to_fetch_list_details",
    properties: {
      id: id as string,
    },
  });
}
---

<MainLayout metadata={result?.seo}>
  {
    result?.rows.length === 0 ? (
      <>couldn't find list</>
    ) : (
      <div>
        <div class="my-10">
          <h1 class="text-4xl mb-2">{result?.title}</h1>
          {/* <p set:html={result?.description} /> */}
        </div>
        <div class="flex flex-col gap-2">
          {result?.rows.map(
            ({ author, title, image, webUrl, ranking, info }) => {
              return (
                <div class="flex gap-3">
                  <span class="ranking text-lg text-black/80">{ranking}.</span>
                  <div class="h-[100px] w-[70px]">
                    <img
                      height={100}
                      width={70}
                      class="w-full h-full object-fill"
                      src={changeGoodreadsImageSize(image, 100)}
                      alt={title}
                    />
                  </div>
                  <div>
                    <a
                      href={`/book/show/${extractIdFromUrl(webUrl)!}/`}
                      class="text-lg"
                    >
                      {title}
                    </a>
                    <div>
                      <span class="text-black/70">
                        by:
                        <a href={`/author/show/${author.id}`}>{author.name}</a>
                      </span>
                    </div>
                    <span class="text-xs text-black/70"> {info} </span>
                  </div>
                </div>
              );
            }
          )}
        </div>
        <div class="flex items-end my-2">
          <Pagination
            prevUrl={
              result?.hasPreviousPage
                ? `/list/show/${id}?page=${page - 1}`
                : undefined
            }
            nextUrl={
              result?.hasNextPage
                ? `/list/show/${id}?page=${page + 1}`
                : undefined
            }
          />
        </div>
      </div>
    )
  }
</MainLayout>
