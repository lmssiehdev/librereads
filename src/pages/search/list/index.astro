---
export const prerender = false;

import Pagination from "../../../components/pagination.astro";
import { type ListData, fetchSearchResult } from "../../../utils/query";
import Layout from "../_layout.astro";

Astro.response.headers.set(
	"Cache-Control",
	"s-maxage=86400, stale-while-revalidate",
);

const searchTerm = Astro.url.searchParams.get("q");
const page = Number(Astro.url.searchParams.get("page")) || 1;

const result: ListData | undefined =
	searchTerm !== null
		? await fetchSearchResult<ListData>(searchTerm, "lists", page)
		: undefined;
---

<Layout metadata={result?.seo!}>
  {
    searchTerm == null ? (
      <></>
    ) : (
      <>
          <div class="mt-6 mb-2">
            {result?.searchCount}
          </div>
          <div >
          {result?.rows.map(({ title, booksInList, list, listUrl }) => {
            return (
              <div class="my-4 max-w-[500px] w-full mx-auto">
                <div class="flex gap-1 w-full">
                  {list.map(({ bookUrl, bookCover }) => {
                    return (
                      <a
                        href={bookUrl}
                        class="h-[150px] max-w-[100px] w-full overflow-hidden rounded"
                      >
                        <img
                          src={bookCover}
                          alt={title}
                          class="w-full h-full object-cover"
                        />
                      </a>
                    );
                  })}
                </div>
                <div class="my-1">
                  <a href={listUrl}>{title}</a>
                  <div class="text-black text-opacity-70 text-sm">
                    {booksInList}
                  </div>
                </div>
              </div>
            );
          })}
        </div>
        <div class="flex items-end">
        <Pagination
        prevUrl={result?.hasPreviousPage ? `/search/list?q=${searchTerm}&page=${page - 1}` : undefined}
        nextUrl={result?.hasNextPage ? `/search/list?q=${searchTerm}&page=${page + 1}` : undefined} />
        </div>
      </>
    )
  }
</Layout>
